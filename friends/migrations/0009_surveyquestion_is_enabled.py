# Generated by Django 2.1.5 on 2019-02-21 08:27

from django.db import migrations, models


def create_questions(apps, schema_editor):
    SurveyQuestion = apps.get_model('friends', 'SurveyQuestion')
    SurveyAnswer = apps.get_model('friends', 'SurveyAnswer')
    FreeTextQuestion = apps.get_model('friends', 'FreeTextQuestion')
    FreeTextResponse = apps.get_model('friends', 'FreeTextResponse')

    # delete all

    SurveyQuestion.objects.all().delete()  # cascades to SurveyAnswer and SurveyResponse
    FreeTextQuestion.objects.all().delete()  # does not cascade to FreeTextResponse
    FreeTextResponse.objects.all().delete()

    # legacy questions (most disabled, some enabled)

    q_qualities = SurveyQuestion.objects.create(
        text='What are the 3 most important qualities to you in meeting & friending someone?',
        max_answers=3,
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_qualities,
        order_index=0,
        text='Background or subculture',
    )
    SurveyAnswer.objects.create(
        question=q_qualities,
        order_index=1,
        text='Chemistry / “gut feeling”',
    )
    SurveyAnswer.objects.create(
        question=q_qualities,
        order_index=2,
        text='Curiosity (esp. intellectual)',
    )
    SurveyAnswer.objects.create(
        question=q_qualities,
        order_index=3,
        text='Interests - music, movies, food, hobbies, etc.',
    )
    SurveyAnswer.objects.create(
        question=q_qualities,
        order_index=4,
        text='Looks',
    )
    SurveyAnswer.objects.create(
        question=q_qualities,
        order_index=5,
        text='Personality/Demeanor',
    )
    SurveyAnswer.objects.create(
        question=q_qualities,
        order_index=6,
        text='Shared sense of humor',
    )
    SurveyAnswer.objects.create(
        question=q_qualities,
        order_index=7,
        text='Shared values',
    )
    FreeTextQuestion.objects.create(
        text='What are your favorite ways or services for meeting people?',
    )
    q_inperson = SurveyQuestion.objects.create(
        text='How important is it to you to be able to meet up in person with someone you\'re matched with?',
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_inperson,
        order_index=0,
        text='1',
    )
    SurveyAnswer.objects.create(
        question=q_inperson,
        order_index=1,
        text='2',
    )
    SurveyAnswer.objects.create(
        question=q_inperson,
        order_index=2,
        text='3',
    )
    SurveyAnswer.objects.create(
        question=q_inperson,
        order_index=3,
        text='4',
    )
    SurveyAnswer.objects.create(
        question=q_inperson,
        order_index=4,
        text='5',
    )
    q_museum = SurveyQuestion.objects.create(
        text='You must visit a museum. You would you rather go to an \\_\\_\\_\\_\\_ museum',
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_museum,
        order_index=0,
        text='art',
    )
    SurveyAnswer.objects.create(
        question=q_museum,
        order_index=1,
        text='history',
    )
    q_travelalone = SurveyQuestion.objects.create(
        text='Have you ever traveled around another country alone?',
        is_enabled=True,  # intentional
    )
    SurveyAnswer.objects.create(
        question=q_travelalone,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_travelalone,
        order_index=1,
        text='no',
    )
    q_political = SurveyQuestion.objects.create(
        text='Can someone both be a kind person and also hold the exact opposite of your political views?',
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_political,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_political,
        order_index=1,
        text='no',
    )
    q_niche = SurveyQuestion.objects.create(
        text='Do you belong to at least one online community focused around niche interests?',
        is_enabled=True,  # intentional
    )
    SurveyAnswer.objects.create(
        question=q_niche,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_niche,
        order_index=1,
        text='no',
    )
    q_suicide = SurveyQuestion.objects.create(
        text='If you have to choose one, you believe suicide should be:',
        is_enabled=True,  # intentional
    )
    SurveyAnswer.objects.create(
        question=q_suicide,
        order_index=0,
        text='legal',
    )
    SurveyAnswer.objects.create(
        question=q_suicide,
        order_index=1,
        text='illegal',
    )
    q_rules = SurveyQuestion.objects.create(
        text='I feel \\_\\_\\_\\_\\_\\_\\_ around people who break rules.',
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_rules,
        order_index=0,
        text='comfortable',
    )
    SurveyAnswer.objects.create(
        question=q_rules,
        order_index=1,
        text='uncomfortable',
    )
    q_horror = SurveyQuestion.objects.create(
        text='Do you like horror movies?',
        is_enabled=True,  # intentional
    )
    SurveyAnswer.objects.create(
        question=q_horror,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_horror,
        order_index=1,
        text='no',
    )
    q_jail = SurveyQuestion.objects.create(
        text='I daydream about how I would escape from jail.',
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_jail,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_jail,
        order_index=1,
        text='no',
    )
    q_pranks = SurveyQuestion.objects.create(
        text='I like pranks.',
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_pranks,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_pranks,
        order_index=1,
        text='no',
    )
    q_enlighten = SurveyQuestion.objects.create(
        text='It is possible to obtain enlightenment through meditation.',
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_enlighten,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_enlighten,
        order_index=1,
        text='no',
    )
    q_boat = SurveyQuestion.objects.create(
        text='Wouldn\'t it be fun to chuck it all and go live on a sailboat?',
        is_enabled=True,  # intentional
    )
    SurveyAnswer.objects.create(
        question=q_boat,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_boat,
        order_index=1,
        text='no',
    )
    q_jokes = SurveyQuestion.objects.create(
        text='I make jokes that offend some people.',
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_jokes,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_jokes,
        order_index=1,
        text='no',
    )
    q_similar = SurveyQuestion.objects.create(
        text='My friends are mostly \\_\\_\\_\\_\\_\\_\\_ me.',
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_similar,
        order_index=0,
        text='similar to',
    )
    SurveyAnswer.objects.create(
        question=q_similar,
        order_index=1,
        text='different from',
    )
    q_evolution = SurveyQuestion.objects.create(
        text='I believe in evolution.',
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_evolution,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_evolution,
        order_index=1,
        text='no',
    )
    q_parties = SurveyQuestion.objects.create(
        text='I enjoy going to parties even if I don\'t know anyone.',
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_parties,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_parties,
        order_index=1,
        text='no',
    )
    q_promise = SurveyQuestion.objects.create(
        text='I keep my word and expect others to.',
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_promise,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_promise,
        order_index=1,
        text='no',
    )
    q_secrets = SurveyQuestion.objects.create(
        text='I keep secrets well.',
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_secrets,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_secrets,
        order_index=1,
        text='no',
    )
    q_conflict = SurveyQuestion.objects.create(
        text='I tend to avoid conflict.',
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_conflict,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_conflict,
        order_index=1,
        text='no',
    )
    q_horoscopes = SurveyQuestion.objects.create(
        text='I think horoscopes are fun.',
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_horoscopes,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_horoscopes,
        order_index=1,
        text='no',
    )
    q_fiction = SurveyQuestion.objects.create(
        text='Fictional stories (books, film, TV series, etc) are one of my most common conversational topics.',
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_fiction,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_fiction,
        order_index=1,
        text='no',
    )
    q_trans = SurveyQuestion.objects.create(
        text='I would be open to dating a transsexual person.',
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_trans,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_trans,
        order_index=1,
        text='no',
    )
    q_controversial = SurveyQuestion.objects.create(
        text='Do you hold any controversial views (on society, politics, culture, etc.) that you would feel afraid to express on social media or to your wider friend group?',
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_controversial,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_controversial,
        order_index=1,
        text='no',
    )
    q_smartdrugs = SurveyQuestion.objects.create(
        text='I would take drugs to make myself smarter if they existed.',
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_smartdrugs,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_smartdrugs,
        order_index=1,
        text='no',
    )
    q_commitment = SurveyQuestion.objects.create(
        text='My choices mostly reflect a commitment to \\_\\_\\_\\_\\_\\_\\_.',
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_commitment,
        order_index=0,
        text='myself',
    )
    SurveyAnswer.objects.create(
        question=q_commitment,
        order_index=1,
        text='my loved ones',
    )
    q_openup = SurveyQuestion.objects.create(
        text='It takes me longer than average to open up / become comfortable around strangers.',
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_openup,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_openup,
        order_index=1,
        text='no',
    )
    q_worry = SurveyQuestion.objects.create(
        text='I worry my friends or partners will leave me.',
        is_enabled=False,
    )
    SurveyAnswer.objects.create(
        question=q_worry,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_worry,
        order_index=1,
        text='no',
    )

    # new questions

    q_zodiac = SurveyQuestion.objects.create(
        text='Do you think zodiac sign is a predictor of compatibility?'
    )
    SurveyAnswer.objects.create(
        question=q_zodiac,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_zodiac,
        order_index=1,
        text='no',
    )
    q_ghost = SurveyQuestion.objects.create(
        text='Do you think you have seen a ghost?'
    )
    SurveyAnswer.objects.create(
        question=q_ghost,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_ghost,
        order_index=1,
        text='no',
    )
    q_dwell = SurveyQuestion.objects.create(
        text='Do you dwell most in the past, present, or future?'
    )
    SurveyAnswer.objects.create(
        question=q_dwell,
        order_index=0,
        text='Past',
    )
    SurveyAnswer.objects.create(
        question=q_dwell,
        order_index=1,
        text='Present',
    )
    SurveyAnswer.objects.create(
        question=q_dwell,
        order_index=2,
        text='Future',
    )
    q_privilege = SurveyQuestion.objects.create(
        text='Do you think women have systemic privilege due to their gender?'
    )
    SurveyAnswer.objects.create(
        question=q_privilege,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_privilege,
        order_index=1,
        text='no',
    )
    q_heinous = SurveyQuestion.objects.create(
        text='When it comes to very heinous crimes (such as rape), do you think the society\'s response should focus more on rehabilitation or punishment of the criminal?'
    )
    SurveyAnswer.objects.create(
        question=q_heinous,
        order_index=0,
        text='Rehabilitation',
    )
    SurveyAnswer.objects.create(
        question=q_heinous,
        order_index=1,
        text='Punishment',
    )
    q_emopain = SurveyQuestion.objects.create(
        text='Do you ever enjoy the experience of emotional pain?'
    )
    SurveyAnswer.objects.create(
        question=q_emopain,
        order_index=0,
        text='Yes, very often',
    )
    SurveyAnswer.objects.create(
        question=q_emopain,
        order_index=1,
        text='Yes, sometimes',
    )
    SurveyAnswer.objects.create(
        question=q_emopain,
        order_index=2,
        text='No, barely',
    )
    q_nude = SurveyQuestion.objects.create(
        text='How comfortable would you be being nude in front of close friends in a casual setting?'
    )
    SurveyAnswer.objects.create(
        question=q_nude,
        order_index=0,
        text='Comfortable',
    )
    SurveyAnswer.objects.create(
        question=q_nude,
        order_index=1,
        text='Not comfortable',
    )
    q_logic = SurveyQuestion.objects.create(
        text='If some men are doctors and some doctors are tall, does it logically follow that some men are tall?'
    )
    SurveyAnswer.objects.create(
        question=q_logic,
        order_index=0,
        text='yes',
    )
    SurveyAnswer.objects.create(
        question=q_logic,
        order_index=1,
        text='no',
    )
    SurveyAnswer.objects.create(
        question=q_logic,
        order_index=2,
        text='I don\'t know',
    )
    q_hero = SurveyQuestion.objects.create(
        text='Among hero, villian, or sidekick, you think yourself more as a:'
    )
    SurveyAnswer.objects.create(
        question=q_hero,
        order_index=0,
        text='Hero',
    )
    SurveyAnswer.objects.create(
        question=q_hero,
        order_index=1,
        text='Villain',
    )
    SurveyAnswer.objects.create(
        question=q_hero,
        order_index=2,
        text='Sidekick',
    )
    q_capitalism = SurveyQuestion.objects.create(
        text='In general, you have mostly ____ feelings about the word \'capitalism\' as used in general social settings.'
    )
    SurveyAnswer.objects.create(
        question=q_capitalism,
        order_index=0,
        text='Positive',
    )
    SurveyAnswer.objects.create(
        question=q_capitalism,
        order_index=1,
        text='Negative',
    )
    SurveyAnswer.objects.create(
        question=q_capitalism,
        order_index=2,
        text='Neutral',
    )
    q_bodyemo = SurveyQuestion.objects.create(
        text='When you feel an emotion, how often does it involve a physical bodily sensation in addition to a mental state?'
    )
    SurveyAnswer.objects.create(
        question=q_bodyemo,
        order_index=0,
        text='Very often',
    )
    SurveyAnswer.objects.create(
        question=q_bodyemo,
        order_index=1,
        text='Sometimes',
    )
    SurveyAnswer.objects.create(
        question=q_bodyemo,
        order_index=2,
        text='Rarely or never',
    )
    q_snip = SurveyQuestion.objects.create(
        text='You believe male circumcision should be:'
    )
    SurveyAnswer.objects.create(
        question=q_snip,
        order_index=0,
        text='Legal',
    )
    SurveyAnswer.objects.create(
        question=q_snip,
        order_index=1,
        text='Illegal',
    )
    SurveyAnswer.objects.create(
        question=q_snip,
        order_index=2,
        text='No opinion',
    )
    q_protagonist = SurveyQuestion.objects.create(
        text='Do you think of yourself more as the protagonist or the narrator?'
    )
    SurveyAnswer.objects.create(
        question=q_protagonist,
        order_index=0,
        text='Protagonist',
    )
    SurveyAnswer.objects.create(
        question=q_protagonist,
        order_index=1,
        text='Narrator',
    )


class Migration(migrations.Migration):

    dependencies = [
        ('friends', '0008_update_colors'),
    ]

    operations = [
        migrations.AddField(
            model_name='surveyquestion',
            name='is_enabled',
            field=models.BooleanField(default=True),
        ),
        migrations.RunPython(create_questions),
        migrations.AlterField(
            model_name='freetextquestion',
            name='text',
            field=models.CharField(max_length=255, unique=True),
        ),
        migrations.AddField(
            model_name='freetextresponse',
            name='question',
            field=models.ForeignKey(on_delete=models.deletion.CASCADE, related_name='responses', to='friends.FreeTextQuestion'),
        ),
        migrations.AlterField(
            model_name='surveyquestion',
            name='text',
            field=models.CharField(max_length=255, unique=True),
        ),
    ]
