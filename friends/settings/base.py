"""
Django settings for friends project.

Generated by 'django-admin startproject' using Django 2.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import socket

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '!3c79l6!v87bj!9*s__uc-)bzbgo^*7h7+4+kh2^9^6=ohv(2%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ELB HealthCheck uses the EC2 instance's IP for its Host header
local_ip = str(socket.gethostbyname(socket.gethostname()))

ALLOWED_HOSTS = [local_ip, "localhost", ".meetluna.com", ".compute.amazonaws.com", ".elasticbeanstalk.com"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'friends',
    'rest_framework',
    'rest_framework.authtoken',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'friends.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'friends.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': os.environ.get('LUMINOS_DB_ENGINE'),
        'NAME': os.environ.get('LUMINOS_DB_NAME'),
        'USER': os.environ.get('LUMINOS_DB_USER'),
        'PASSWORD': os.environ.get('LUMINOS_DB_PASSWORD'),
        'HOST': os.environ.get('LUMINOS_DB_HOST'),
        'PORT': os.environ.get('LUMINOS_DB_PORT'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

AUTH_USER_MODEL = 'friends.LunaUser'

# Phone verification

# Disabling Authy for development
AUTHY_DISABLE = int(os.environ.get('AUTHY_DISABLE', 1))

# Authy Application Key
AUTHY_ACCOUNT_SECURITY_API_KEY = os.environ.get('AUTHY_ACCOUNT_SECURITY_API_KEY')

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'friends.authentication.BearerTokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    )
}

# OneSignal API Settings
ONESIGNAL_DISABLE = os.environ.get('ONESIGNAL_DISABLE')

if ONESIGNAL_DISABLE != "1":
    ONESIGNAL_API_ENDPOINT = os.environ['ONESIGNAL_API_ENDPOINT']
    ONESIGNAL_AUTHORIZATION_HEADER = os.environ['ONESIGNAL_AUTHORIZATION_HEADER']
    ONESIGNAL_APPID = os.environ['ONESIGNAL_APPID']
